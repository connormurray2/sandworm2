/**
 * Inv
 * ===
 *
 * Inventory - used in p2p messages.
 */
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Inv = void 0;

var _bw = require("./bw");

var _struct = require("./struct");

class Inv extends _struct.Struct {
  constructor(typeNum, hashBuf) {
    super({
      typeNum,
      hashBuf
    });
  }

  fromBr(br) {
    this.typeNum = br.readUInt32LE();
    this.hashBuf = br.read(32);
    return this;
  }

  toBw(bw) {
    if (!bw) {
      bw = new _bw.Bw();
    }

    bw.writeUInt32LE(this.typeNum);
    bw.write(this.hashBuf);
    return bw;
  }

  isTx() {
    return this.typeNum === Inv.MSG_TX;
  }

  isBlock() {
    return this.typeNum === Inv.MSG_BLOCK;
  }

  isFilteredBlock() {
    return this.typeNum === Inv.MSG_FILTERED_BLOCK;
  }

}

exports.Inv = Inv;
Inv.MSG_TX = 1;
Inv.MSG_BLOCK = 2;
Inv.MSG_FILTERED_BLOCK = 3;